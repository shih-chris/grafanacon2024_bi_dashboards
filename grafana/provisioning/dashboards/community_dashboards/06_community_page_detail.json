{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 6,
  "links": [],
  "panels": [
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div\n    style=\"\n        background-image: url(https://grafana.com/static/img/grafana_labs.jpg);\n        background-position: 0% 25%;\n        background-size: cover;\n        text-align: right;\n    \"\n>\n    <img \n        style=\"\n            height:2em;\n            margin:0.5%;\n            padding-right: 2em;\n        \"\n        src=\"https://grafana.com/static/assets/internal/grafana_logo-web.svg\"\n    >\n</div>\n",
        "mode": "html"
      },
      "pluginVersion": "10.4.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 2
      },
      "id": 2,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<p \n  style=\"font-size:350%;text-align:center; font-weight:normal;color:#cBD0200;>\"\n>\nIndividual Community Page Details\n</p>",
        "mode": "html"
      },
      "pluginVersion": "10.4.0",
      "transparent": true,
      "type": "text"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "super-light-blue",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": true
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "page_url"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "",
                    "url": "${__value.raw}"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byRegexp",
              "options": "/.*T30D/"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-blue",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "gradient",
                  "type": "color-background"
                }
              },
              {
                "id": "custom.width",
                "value": 150
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "unit",
                "value": "locale"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Created Date"
            },
            "properties": [
              {
                "id": "unit",
                "value": "dateTimeFromNow"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "custom.width",
                "value": 150
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 5
      },
      "id": 5,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDF61E9E97939C7ED"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.4",
          "queryType": "table",
          "rawSql": "with\n\nfinal as (\n\n    select *, concat('https://community.grafana.com', page_path) as page_url\n    from dim_community_pages\n    where page_path = ${page_path:sqlstring}\n\n)\n\n-- final as (\n--\n--     select 1 as sort_order, 'Page Title' as key, page_title as value from deduped_pages\n--     union all\n--     select 2 as sort_order, 'Page URL' as key, concat('https://community.grafana.com', page_path) as value from deduped_pages\n--     union all\n--     select 3 as sort_order, 'Create Date' as key, cast(first_page_date as String) as value from deduped_pages\n--     union all\n--     select 4 as sort_order, 'T30D Page Views' as key, cast(t30d_page_views as String) as value from deduped_pages\n--     union all\n--     select 5 as sort_order, 'T30D Page Rank' as key, cast(t30d_page_rank as String) as value from deduped_pages\n--\n-- )\n\nselect *\nfrom final\n",
          "refId": "A"
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "page_path": true,
              "rnk": true,
              "sort_order": true,
              "total_page_views": true
            },
            "includeByName": {},
            "indexByName": {
              "first_page_date": 3,
              "page_path": 2,
              "page_title": 0,
              "page_url": 1,
              "rnk": 6,
              "t30d_page_rank": 5,
              "t30d_page_views": 4
            },
            "renameByName": {
              "first_page_date": "Created Date",
              "page_path": "",
              "page_title": "Page Title",
              "page_url": "Page URL",
              "t30d_page_rank": "T30D Page Rank",
              "t30d_page_views": "T30D Page Views"
            }
          }
        },
        {
          "id": "formatTime",
          "options": {
            "outputFormat": "YYYY-MM-DD",
            "timeField": "Created Date",
            "timezone": "utc",
            "useTimezone": true
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "gridPos": {
        "h": 18,
        "w": 14,
        "x": 0,
        "y": 8
      },
      "id": 7,
      "options": {
        "onclick": "console.log(data)\nvar base_url = 'd/adha2vm34kd8ga/06-individual-community-page-details?orgId=1&from=now-90d&to=now&var-page_path='\nvar url = base_url + data.points[0].text;\nwindow.open(url);\n\n// in case you want to open in a new window\n// window.open(url, '_blank');",
        "script": "// create inputs\nvar page_path = data.series[0].fields[0].values\nvar page_title = data.series[0].fields[1].values\nvar x_axis = data.series[0].fields[2].values\nvar y_axis = data.series[0].fields[3].values\nvar z_axis = data.series[0].fields[4].values\nvar page_type = data.series[0].fields[5].values\n\n// create vars\nvar traces = {}\n\ngrafana_color_palette = {\n    1: 'rgb(222, 182, 242)', // light purple\n    2: 'rgb(184, 119, 217)', // medium purple\n    3: 'rgb(143, 59, 184)', // dark purple\n    4: 'rgb(192, 216, 255)', // light blue\n    5: 'rgb(87, 148, 242)', // medium blue\n    6: 'rgb(31, 96, 196)', // dark blue\n    7: 'rgb(200, 242, 194)', // light green\n    8: 'rgb(115, 191, 105)', // medium green\n    9: 'rgb(55, 135, 45)', // dark green\n    10: 'rgb(255, 248, 153)', // light yellow\n    11: 'rgb(250, 222, 42)', // medium yellow\n    12: 'rgb(224, 180, 0)', // dark yellow\n    13: 'rgb(255, 203, 125)', // light orange\n    14: 'rgb(255, 152, 48)', // medium orange\n    15: 'rgb(250, 100, 0)', // dark orange\n    16: 'rgb(255, 166, 176)', // light red\n    17: 'rgb(242, 73, 92)', // medium red\n    18: 'rgb(196, 22, 42)', // dark red\n}\n\n// Create Traces\ntraces['selected'] = {\n    // trace type\n    type: 'scatter3d',\n    mode: 'markers',\n    name: 'Selected Page',\n\n    // trace data\n    x: [],\n    y: [],\n    z: [],\n    marker: {\n        color: grafana_color_palette[11],\n        size: 11,\n        opacity: 1\n    },\n    hovertext: [],\n    text:[],\n\n    // sets hover to only show text, rather than x + y\n    hoverinfo: 'text'\n}\n\ntraces['previous_pages'] = {\n    // trace type\n    type: 'scatter3d',\n    mode: 'markers',\n    name: 'Common Previous Pages',\n\n    // trace data\n    x: [],\n    y: [],\n    z: [],\n    marker: {\n        color: grafana_color_palette[2],\n        size: 7,\n        opacity: 1\n    },\n    hovertext: [],\n    text:[],\n\n    // sets hover to only show text, rather than x + y\n    hoverinfo: 'text'\n}\n\ntraces['next_pages'] = {\n    // trace type\n    type: 'scatter3d',\n    mode: 'markers',\n    name: 'Common Next Pages',\n\n    // trace data\n    x: [],\n    y: [],\n    z: [],\n    marker: {\n        color: grafana_color_palette[5],\n        size: 7,\n        opacity: 1\n    },\n    hovertext: [],\n    text:[],\n\n    // sets hover to only show text, rather than x + y\n    hoverinfo: 'text'\n}\n\ntraces['top_100'] = {\n    // trace type\n    type: 'scatter3d',\n    mode: 'markers',\n    name: 'Top 100 Pages',\n\n    // trace data\n    x: [],\n    y: [],\n    z: [],\n    marker: {\n        color: 'rgb(101, 101, 101)',\n        size: 4,\n        opacity: 1\n    },\n    hovertext: [],\n    text:[],\n\n    // sets hover to only show text, rather than x + y\n    hoverinfo: 'text'\n}\n\n// We need to create a new trace for each prefix (in order for a legend to work)\n// Map each prefix to a colour and create a dictionary entry in traces\nfor (let i = 0; i < page_path.length; i++) {\n\n    if (page_type[i] == 1) {\n        traces['selected']['x'].push(x_axis[i])\n        traces['selected']['y'].push(y_axis[i])\n        traces['selected']['z'].push(z_axis[i])\n        traces['selected']['hovertext'].push(page_title[i])\n        traces['selected']['text'].push(page_path[i])\n    } else if (page_type[i] == 2) {\n        traces['next_pages']['x'].push(x_axis[i])\n        traces['next_pages']['y'].push(y_axis[i])\n        traces['next_pages']['z'].push(z_axis[i])\n        traces['next_pages']['hovertext'].push(page_title[i])\n        traces['next_pages']['text'].push(page_path[i])\n    } else if (page_type[i] == 3) {\n        traces['previous_pages']['x'].push(x_axis[i])\n        traces['previous_pages']['y'].push(y_axis[i])\n        traces['previous_pages']['z'].push(z_axis[i])\n        traces['previous_pages']['hovertext'].push(page_title[i])\n        traces['previous_pages']['text'].push(page_path[i])\n    } else {\n        traces['top_100']['x'].push(x_axis[i])\n        traces['top_100']['y'].push(y_axis[i])\n        traces['top_100']['z'].push(z_axis[i])\n        traces['top_100']['hovertext'].push(page_title[i])\n        traces['top_100']['text'].push(page_path[i])\n    }\n}\n\n// loop through resulting traces dict to get list of traces\nvar traces_list = []\nfor (let k in traces) {\n    traces_list.push(traces[k])\n}\n\n// set layout details\nvar layout = {\n  scene: {\n    camera: {\n      eye: {\n        x: -0.9,\n        y: 1.1,\n        z: 0.8\n      }\n    }\n  }\n}\n\nreturn {\n    data : traces_list,\n    layout : layout,\n}\n\n"
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDF61E9E97939C7ED"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.4",
          "queryType": "table",
          "rawSql": "with\n\nnext_pages as (\n\n    select\n        next_page_path\n        ,page_views\n    from\n        rpt_community_next_pages\n    where\n        page_path = ${page_path:sqlstring}\n        and next_page_path != 'Session Exit'\n    order by page_views desc\n    limit 20\n\n),\n\nprev_pages as (\n\n    select\n        prev_page_path\n        ,page_views\n    from\n        rpt_community_previous_pages\n    where\n        page_path = ${page_path:sqlstring}\n        and prev_page_path != 'Session Start'\n    order by page_views desc\n    limit 20\n\n),\n\npage_details as (\n\n    select\n        page_path\n        ,page_title\n        ,n.page_views as next_page_views\n        ,pr.page_views as prev_page_views\n    from\n        dim_community_pages p\n        left join next_pages n\n            on p.page_path = n.next_page_path\n        left join prev_pages pr\n            on p.page_path = pr.prev_page_path\n    where\n        (\n            p.t30d_page_rank <= 100\n            or p.page_path = ${page_path:sqlstring}\n            or n.page_views > 0\n            or pr.page_views > 0\n        )\n\n),\n\nfinal as (\n\n    select\n        page_path\n        ,page_title\n        ,e.x\n        ,e.y\n        ,e.z\n        ,case\n            when pd.page_path = ${page_path:sqlstring} then 1\n            when pd.next_page_views > 0 then 2\n            when pd.prev_page_views > 0 then 3\n            else 4\n        end as page_type\n    from\n        page_details pd\n        inner join dim_community_page_embeddings e\n            on pd.page_path = e.page_path\n            and pd.page_title = e.page_title\n\n)\n\nselect *\nfrom final\n\n",
          "refId": "A"
        }
      ],
      "title": "Related Community Pages",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "page_path": false,
              "page_title": false,
              "t30d_page_views": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {}
          }
        }
      ],
      "transparent": true,
      "type": "ae3e-plotly-panel"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 30,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 9,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "page_views"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#78787880",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "moving_average"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 3
              },
              {
                "id": "custom.fillOpacity",
                "value": 0
              },
              {
                "id": "displayName",
                "value": "Moving Average - 7 days"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 18,
        "w": 10,
        "x": 14,
        "y": 8
      },
      "id": 6,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          "utc"
        ],
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDF61E9E97939C7ED"
          },
          "editorMode": "code",
          "editorType": "sql",
          "format": 1,
          "meta": {},
          "pluginVersion": "4.0.4",
          "queryType": "table",
          "rawQuery": true,
          "rawSql": "with\n\npage_views as (\n\n    select\n        date_trunc('day', p.received_date) as time_period\n        ,sum(page_views) as page_views\n    from\n        rpt_community_page_stats_daily p\n    where\n        p.page_path = cast(${page_path:sqlstring} as String)\n    group by 1\n\n),\n\nfinal as (\n\n    select\n        p.time_period\n        ,p.page_views\n        ,avg(p.page_views) over (order by p.time_period rows between 6 preceding and current row) as moving_average\n    from\n        page_views p\n\n)\n\nselect *\nfrom final\nwhere\n    $__timeFilter(time_period)\n    and time_period between '2023-04-07' and '2024-03-28'\norder by 1\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Page Views by Day",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "distinct_pages": true,
              "new_page_views": true,
              "unique_pages": true,
              "unique_visitors": true
            },
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "distinct_pages": "",
              "moving_average": "",
              "page_views": "Community Page Views",
              "t7d_moving_average": "7-day Moving Average",
              "unique_visitors": "Unique Visitors"
            }
          }
        }
      ],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 26
      },
      "id": 13,
      "options": {
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "",
        "mode": "markdown"
      },
      "pluginVersion": "10.4.0",
      "transparent": true,
      "type": "text"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 27
      },
      "id": 9,
      "panels": [],
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "purple",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "T30D Page Views"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 190
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "gauge",
                  "valueDisplayMode": "text"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Previous Page"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/adha2vm34kd8ga/06-individual-community-page-details?orgId=1&${__url_time_range}&var-page_path=${__data.fields.prev_page_path:percentencode}"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "json-view"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "prev_page_path"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 0,
        "y": 28
      },
      "id": 12,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDF61E9E97939C7ED"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.4",
          "queryType": "table",
          "rawSql": "with\n\nfinal as (\n\n    select\n        case\n            when pr.prev_page_path = 'Session Exit' then 'Session Exit'\n            else p.page_title\n        end as page_title\n        ,pr.prev_page_path\n        ,pr.page_views\n    from\n        rpt_community_previous_pages pr\n        inner join dim_community_pages p\n            on pr.prev_page_path = p.page_path\n    where\n        pr.page_path = ${page_path:sqlstring}\n    order by pr.page_views desc\n\n)\n\nselect *\nfrom final\nwhere page_title != ''\nlimit 10\n\n",
          "refId": "A"
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "next_page_path": "",
              "page_title": "Previous Page",
              "page_views": "T30D Page Views"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-clickhouse-datasource",
        "uid": "PDF61E9E97939C7ED"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "T30D Page Views"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 190
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "gauge",
                  "valueDisplayMode": "text"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Next Page"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "title": "",
                    "url": "/d/adha2vm34kd8ga/06-individual-community-page-details?orgId=1&${__url_time_range}&var-page_path=${__data.fields.next_page_path:percentencode}"
                  }
                ]
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "json-view"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "next_page_path"
            },
            "properties": [
              {
                "id": "custom.hidden",
                "value": true
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 12,
        "x": 12,
        "y": 28
      },
      "id": 15,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "grafana-clickhouse-datasource",
            "uid": "PDF61E9E97939C7ED"
          },
          "editorType": "sql",
          "format": 1,
          "meta": {
            "builderOptions": {
              "columns": [],
              "database": "",
              "limit": 1000,
              "mode": "list",
              "queryType": "table",
              "table": ""
            }
          },
          "pluginVersion": "4.0.4",
          "queryType": "table",
          "rawSql": "with\n\nfinal as (\n\n    select\n        case\n            when n.next_page_path = 'Session Exit' then 'Session Exit'\n            else p.page_title\n        end as page_title\n        ,n.next_page_path\n        ,n.page_views\n    from\n        rpt_community_next_pages n\n        inner join dim_community_pages p\n            on n.next_page_path = p.page_path\n    where\n        n.page_path = ${page_path:sqlstring}\n    order by n.page_views desc\n\n)\n\nselect *\nfrom final\nwhere page_title != ''\nlimit 10\n",
          "refId": "A"
        }
      ],
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "includeByName": {},
            "indexByName": {},
            "renameByName": {
              "next_page_path": "",
              "page_title": "Next Page",
              "page_views": "T30D Page Views"
            }
          }
        }
      ],
      "transparent": true,
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 40
      },
      "id": 10,
      "panels": [],
      "title": "Appendix",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "P44368ADAD746BC27"
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "id": 11,
      "options": {
        "includeVars": false,
        "keepTime": false,
        "maxItems": 10,
        "query": "",
        "showHeadings": false,
        "showRecentlyViewed": false,
        "showSearch": true,
        "showStarred": false,
        "tags": []
      },
      "pluginVersion": "10.4.0",
      "title": "Related Dashboards",
      "transparent": true,
      "type": "dashlist"
    }
  ],
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "/t/how-to-find-your-grafana-version-info-3-different-ways/86857",
          "value": "/t/how-to-find-your-grafana-version-info-3-different-ways/86857"
        },
        "hide": 0,
        "label": "Page Path",
        "name": "page_path",
        "options": [
          {
            "selected": false,
            "text": "/t/admin-password-reset/19455",
            "value": "/t/admin-password-reset/19455"
          }
        ],
        "query": "/t/how-to-find-your-grafana-version-info-3-different-ways/86857",
        "skipUrlSync": false,
        "type": "textbox"
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "06_individual_community_page_details",
  "uid": "adha2vm34kd8ga",
  "version": 2,
  "weekStart": ""
}
